plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id 'com.google.firebase.crashlytics'
    id("com.google.android.libraries.mapsplatform.secrets-gradle-plugin")
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
android {
    namespace = "com.webaddicted.pingmexx"
    compileSdk = 35//flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    defaultConfig {
        applicationId = "com.webaddicted.pingmexx"
        minSdk = 24//flutter.minSdkVersion
        targetSdk = 35//flutter.targetSdkVersion
        versionCode = 1//flutterVersionCode.toInteger()
        versionName = "1.0.0"//flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            shrinkResources false
            minifyEnabled false
        }
    }
}

flutter {
    source = "../.."
}
dependencies {
    implementation 'com.google.android.material:material:1.12.0'
    implementation(platform("com.google.firebase:firebase-bom:33.7.0"))
    implementation("com.google.firebase:firebase-analytics")
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << "-Xlint:-options"
}